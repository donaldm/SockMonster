<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Monster_Sprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vx = 0;
vy = 0;
move_speed = 3;
socks = 0;
lives = 3;
started = 0;
message = "";
health = 100;

audio_play_sound(I_Am_The_Monster_Sound, 10, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vx = 0;
vy = 0;

if keyboard_check(vk_left)
{
    vx = -move_speed;
}
else if keyboard_check(vk_right)
{
    vx = move_speed;
}

if keyboard_check(vk_up)
{
    vy = -move_speed;
}
else if keyboard_check(vk_down)
{
    vy = move_speed;
}

x += vx;
y += vy;

var half_w = sprite_width / 2;
var half_h = sprite_height / 2;
var under_bed = rectangle_in_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom,
                                       Bed.x + 8, Bed.y, Bed.x + 64 - 8, Bed.y + 64);
                                       
if ( under_bed == 1 and instance_number(Sock) == 0 and started == 1)
{
    var next_room = room_next(room);
    if ( next_room != -1 )
    {
        room_goto(next_room);
    }
}
else if ( started == 0 and under_bed == 0 )
{
    started = 1;
}

if ( health &lt;= 0 )
{
    x = Bed.x + Bed.sprite_width / 2;
    y = Bed.y + Bed.sprite_height / 2;
    health = 100;
    global.socks_left = socks;
    socks = 0;
    lives -= 1;
    started = 0;
    move_speed = 3;
    with(Cat_Bed)
    {
        angle = 0;
        sight_width = 50;
        sight_distance = 100;
        sweep_speed = 1;
        search_state = search_states.sweep;
    }
}

if ( lives &lt;= 0 )
{
    room_goto(Defeat);
}

message = "";
if ( instance_number(Sock) == 0 )
{   
    message = "All socks have been eatten. Get under the bed!";
}
else if ( started == 0 )
{
    message = "You must get out from under the bed!";
}
else if ( started == 1 )
{
    message = "Eat all of the socks! Don't let the cats see you...";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Sock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>socks += 1;
move_speed += 0.4;
if ( health &lt; 100 )
{
    health = ( health + 5 ) mod 100;
}
audio_play_sound(Pickup, 10, false);
with(other)
{
    instance_destroy();
}

with(Cat_Bed)
{
    sweep_speed += 0.5;
    //sight_width += 1;
    sight_distance += 10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var gui_start_y = 10;
var health_start_x = window_get_width() - 450;
var health_start_y = gui_start_y + 5;
var health_width = 160;
var health_height = 20;

draw_healthbar(health_start_x, health_start_y, 
               health_start_x + health_width, health_start_y + health_height,
               health, c_black, c_red, c_green, 0, true, false);

var life_start_x = window_get_width() - 250;
var life_start_y = gui_start_y;
var life_width = sprite_get_width(Monster_Lives);

for(cur_life = 0; cur_life &lt; lives; cur_life += 1 )
{
    draw_sprite(Monster_Lives, 0, 
                life_start_x + cur_life * (life_width + 2), life_start_y); 
}

var sock_start_x = life_start_x + 140;
var sock_start_y = gui_start_y;

var sock_str = string_format(socks, 2, 0);
sock_str = string_replace(sock_str, " ", "0");
var sock_str_width = string_width(sock_str);

draw_set_font(SockFont);
draw_text_outline(sock_start_x, sock_start_y, sock_str);

draw_set_font(MessageFont);
//draw the number of socks
draw_sprite(Sock_Sprite, 0, sock_start_x + sock_str_width + 15, sock_start_y);

var message_x = window_get_width() / 2 - string_width(message) / 2;
var message_y = window_get_height() - string_height(message) - 2;
draw_text_outline(message_x, message_y, message);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
